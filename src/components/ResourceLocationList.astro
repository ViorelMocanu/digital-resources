---
/**
 * Renders a list of resource locations based on the provided props.
 * @component
 * @example
 * ```astro
 * <ResourceLocationList resource={resource} />
 * ```
 * This example renders a list of resource locations using the `res` prop.
 * @property {ExtendedResource} [res] - An optional object representing an extended resource.
 * @returns {astro.AstroNode} The rendered list of resource locations.
 */

import { allTaxonomies } from '@lib/supabase';
import type { Database } from '@customtypes/supabase';
import { getTaxonomyParents } from '@utils/getTaxonomies';

export interface Props {
	resource: Database['public']['Tables']['resources']['Row'];
}

const { resource } = Astro.props satisfies Props;

const taxonomies = getTaxonomyParents(allTaxonomies, resource?.taxonomy?.id);
const section = taxonomies.pop();
const category = taxonomies.pop();
const subcategory = taxonomies.pop();
---

<ul class="ResourceLocationList">
	<li class="DesktopOnlyBlock">
		<span class="ResourceLocationText">Găsești resursa în:</span>
	</li>
	{
		section && (
			<li class="ResourceLocationItem Classification">
				<a class="ClassificationLink" href={`/${section.slug}`} title={`Vezi toate resursele din secțiunea ${section.title}`}>
					{section.menu}
				</a>
			</li>
		)
	}

	{
		section && category && (
			<li class="ResourceLocationItem Classification">
				<a class="ClassificationLink" href={`/${section.slug}/${category.slug}`} title={`Vezi toate resursele din categoria ${category.title}`}>
					{category.menu}
				</a>
			</li>
		)
	}

	{
		section && category && subcategory && (
			<li class="ResourceLocationItem Classification">
				<a class="ClassificationLink" href={`/${section.slug}/${category.slug}/${subcategory.slug}`} title={`Vezi toate resursele din subcategoria ${subcategory.title}`}>
					{subcategory.menu}
				</a>
			</li>
		)
	}
</ul>
