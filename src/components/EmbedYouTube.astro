---
// based on https://github.com/delucis/astro-embed/blob/main/packages/astro-embed-youtube/YouTube.astro

// Thanks to eleventy-plugin-youtube-embed
// https://github.com/gfscott/eleventy-plugin-youtube-embed/blob/main/lib/extractMatches.js
const urlPattern =
	/(?=(\s*))\1(?:<a [^>]*?>)??(?=(\s*))\2(?:https?:\/\/)??(?:w{3}\.)??(?:youtube\.com|youtu\.be)\/(?:watch\?v=|embed\/)??([A-Za-z0-9-_]{11})(?:[^\s<>]*)(?=(\s*))\4(?:<\/a>)??(?=(\s*))\5/;

/**
 * Extract a YouTube ID from a URL if it matches the pattern.
 * @param url URL to test
 * @returns A YouTube video ID or undefined if none matched
 */
function urlMatcher (url: string): string | undefined {
	const match = url.match(urlPattern);
	return match?.[3];
}

export interface Props extends astroHTML.JSX.HTMLAttributes {
	id: string;
	poster?: string;
	params?: string;
	playlabel?: string;
	partytown?: boolean;
}

const { id, poster, partytown = false, ...attrs } = Astro.props as Props;

const idRegExp = /^[A-Za-z0-9-_]+$/;

function extractID (idOrUrl: string) {
	if (idRegExp.test(idOrUrl)) return idOrUrl;
	return urlMatcher(idOrUrl);
}

const videoid = extractID(id);
const posterURL = poster || `https://i.ytimg.com/vi/${videoid}/hqdefault.jpg`;

// TODO: use the progressive enhancement pattern once https://github.com/paulirish/lite-youtube-embed/issues/124 is released.
---

<lite-youtube {videoid} {...attrs} style={`background-image: url('${posterURL}');`}></lite-youtube>

{partytown ? (
	<script type="text/partytown">
		import "lite-youtube-embed";
	</script>
) : (
	<script>
		import "lite-youtube-embed";
	</script>
)}