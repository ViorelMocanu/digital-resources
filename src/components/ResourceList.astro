---
import { type CollectionEntry, getCollection } from 'astro:content';
import Message from './Message.astro';
import Pagination from './Pagination.astro';
import { resourceTypeIcon } from '../config';
import { highlightUrl } from '../utils/urlHelpers';

type extendedResource = CollectionEntry<"resources"> & {
	type: string;
	tagData: CollectionEntry<"tags">[] | [];
	sectionData: CollectionEntry<"sections"> | "";
	categoryData: CollectionEntry<"categories">[] | [];
	subCategoryData: CollectionEntry<"subcategories">[] | [];
}

export interface Props {
	resources: CollectionEntry<"resources">[];
	page?: {
		currentPage: number,
		lastPage: number,
		url: {
			next?: string,
			prev?: string,
		},
	};
}

const { resources, page } = Astro.props as Props;

const activePage = Astro.url.pathname.substring(1);

let r = resources;
const allTags = await getCollection("tags") as CollectionEntry<"tags">[];
const allSections = await getCollection("sections") as CollectionEntry<"sections">[];
const allCategories = await getCollection("categories") as CollectionEntry<"categories">[];
const allSubCategories = await getCollection("subcategories") as CollectionEntry<"subcategories">[];

if (resources) {
	r.forEach((resource:extendedResource) => {
		if (resource.data.tags !== null) {
			resource.tagData = new Array();
			resource.data.tags.forEach((tag:{"slug":string,"collection":string}) => {
				const currentTag = allTags.find((el) => {
					return el.slug == tag.slug;
				});
				resource.tagData.push(currentTag);
				if (currentTag?.data.type == "Tip") {
					resource.type = currentTag?.data.title;
				}
			});
		}

		if (resource.data.section !== null) {
			const sectionSlug = resource.data.section.slug;
			allSections.forEach((s:CollectionEntry<"sections">) => {
				if (s.slug == sectionSlug) resource.sectionData = s;
			});
		}

		if (resource.data.categories !== null && typeof resource.data.categories !== "undefined" && resource.data.categories.length > 0) {
			resource.categoryData = new Array();
			const currentCategories = resource.data.categories.flatMap((cat:{"slug":string,"collection":string}) => (cat.slug));
			currentCategories.forEach((category:string) => {
				allCategories.forEach((c:CollectionEntry<"categories">) => {
					if (c.slug == category) resource.categoryData.push(c);
				});
			});
		}

		if (resource.data.subcategories !== null && typeof resource.data.subcategories !== "undefined" && resource.data.subcategories.length > 0) {
			resource.subCategoryData = new Array();
			const currentSubCategories = resource.data.subcategories.flatMap((subcat:{"slug":string,"collection":string}) => (subcat.slug));
			currentSubCategories.forEach((subcategory:string) => {
				allSubCategories.forEach((s:CollectionEntry<"subcategories">) => {
					if (s.slug == subcategory) resource.subCategoryData.push(s);
				});
			});
		}
	});
}

---

<div class="ResourceContainer">

	{page && <Pagination currentPage={page.currentPage} lastPage={page.lastPage} next={page.url.next} prev={page.url.prev} boxHeader={false} />}

	{(resources && resources.length > 0) && (
		<ol class="ResourceList">
			{r.map((resource) => (
				<li class="ResourceItem">
					<div class="ResourceName">
						{false && <button class="ResourceStatus" type="button">‚úÖ</button> }
						<h4 class="ResourceTitle">
							{
								resource.slug && (
									<a class="ResourceLink" href={`/resurse/${resource.slug}`} title={`ViziteazƒÉ resursa intitulatƒÉ: ${resource.data.title}`}>
										{resource.data.title}
										{resourceTypeIcon[resource.type.toLowerCase()]}
									</a>
								)
							}
						</h4>
					</div>
					<div class="ResourceAside ResourceInfo">
						<h5 class="WidgetTitle">Informa»õii utile:</h5>
						<ul class="InfoList">
							<li class="InfoItem">
								<div class="InfoItemLabel">
									<icon class="Icon IconRating">
										<span class="SROnly">‚≠ê</span>
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
											<path stroke-linecap="round" stroke-linejoin="round" d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" />
										</svg>
									</icon>
									<span class="InfoItemText">Rating-ul link-ului</span>
								</div>
								<strong class="InfoItemValue">{resource.data.rating || "n/a"} (10)</strong>
							</li>
							<li class="InfoItem">
								<div class="InfoItemLabel">
									<icon class="Icon IconViews">
										<span class="SROnly">üëÅÔ∏è</span>
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
											<path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z" />
											<path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
										</svg>
									</icon>
									<span class="InfoItemText">VizualizƒÉri</span>
								</div>
								<strong class="InfoItemValue">7895</strong>
							</li>
							{
								resource.data.requiredTime && (
									<li class="InfoItem">
										<div class="InfoItemLabel">
											<icon class="Icon IconTime">
												<span class="SROnly">‚è∞</span>
												<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
													<path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z" />
												</svg>
											</icon>
											<span class="InfoItemText">Timp necesar</span>
										</div>
										<strong class="InfoItemValue">{resource.data.requiredTime}h</strong>
									</li>
								)
							}
						</ul>
					</div>
					<div class="ResourceMainContent">
						<ul class="ResourceLocationList">
							{resource.data.section && (
								<li class="ResourceLocationItem Classification">
									<a class="ClassificationLink" href={`/${resource.data.section.slug}`} title={`Vezi toate resursele din sec»õiunea ${resource.sectionData.data.title}`}>{resource.sectionData.data.menu}</a>
								</li>
							)}
							{resource.data.categories && resource.categoryData.map((cat:CollectionEntry<"categories">) => (
								<li class="ResourceLocationItem Classification">
									<a class="ClassificationLink" href={`/${resource.data.section.slug}/${cat.slug}`} title={`Vezi toate resursele din categoria ${cat.data.title}`}>{cat.data.menu}</a>
								</li>
							))}
							{resource.data.subcategories && resource.categoryData.map((cat:CollectionEntry<"categories">) => resource.subCategoryData.map((subcat:CollectionEntry<"subcategories">) => (
								<li class="ResourceLocationItem Classification">
									<a class="ClassificationLink" href={`/${resource.data.section.slug}/${cat.slug}/${subcat.slug}`} title={`Vezi toate resursele din subcategoria ${subcat.data.title}`}>{subcat.data.menu}</a>
								</li>
							)))}
						</ul>
						{resource.data.description && <p class="ResourceP">{resource.data.description}</p>}
						{resource.data.tags && 
							<ul class="ResourceTags">
								{resource.tagData.map((tag:CollectionEntry<"tags">) => (
									<li class:list={highlightUrl(`taguri/${tag.slug}`, 'ResourceTag', 'Active', activePage)}>
										<a class:list={["ResourceTagLink", `${tag.data.type}-${tag.slug}`]} href={`/taguri/${tag.slug}`} title={`Vezi toate resursele care sunt clasificate astfel: ${tag.data.title}`}>
											<span class="Icon IconTag">Tag:</span>
											<span class="TagName">{tag.data.title}</span>
										</a>
									</li>
								))}
							</ul>
						}
					</div>
					<aside class="ResourceAside ResourceActions">
						<h5 class="WidgetTitle">Ac»õiuni disponibile:</h5>
						<ul class="InfoList">
							<li class="InfoItem">
								<button class="InfoLink" type="button" title="Share-uie»ôte resursa: Resilient Web Design cu prietenii tƒÉi">
									<icon class="Icon IconShare">
										<span class="SROnly">üöÄ</span>
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
											<path stroke-linecap="round" stroke-linejoin="round" d="M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z" />
										</svg>
									</icon>
									<span class="ButtonText">Trimite<span class="DesktopOnlyInline"> link-ul</span></span>
								</button>
							</li>
							<li class="InfoItem">
								<button class="InfoLink" type="button" title="AdaugƒÉ √Æn lista ta de resurse favorite resursa: Resilient Web Design">
									<icon class="Icon IconLike">
										<span class="SROnly">‚ù§Ô∏è</span>
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
											<path stroke-linecap="round" stroke-linejoin="round" d="M6.633 10.5c.806 0 1.533-.446 2.031-1.08a9.041 9.041 0 012.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 00.322-1.672V3a.75.75 0 01.75-.75A2.25 2.25 0 0116.5 4.5c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 01-2.649 7.521c-.388.482-.987.729-1.605.729H13.48c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 00-1.423-.23H5.904M14.25 9h2.25M5.904 18.75c.083.205.173.405.27.602.197.4-.078.898-.523.898h-.908c-.889 0-1.713-.518-1.972-1.368a12 12 0 01-.521-3.507c0-1.553.295-3.036.831-4.398C3.387 10.203 4.167 9.75 5 9.75h1.053c.472 0 .745.556.5.96a8.958 8.958 0 00-1.302 4.665c0 1.194.232 2.333.654 3.375z" />
										</svg>
									</icon>
									<span class="ButtonText">AdaugƒÉ<span class="DesktopOnlyInline"> √Æn listƒÉ</span></span>
								</button>
							</li>
							<li class="InfoItem">
								<button class="InfoLink" type="button" title="SemnaleazƒÉ o problemƒÉ cu resursa: Resilient Web Design - link gre»ôit, site hack-uit, proprietƒÉ»õi gre»ôite">
									<icon class="Icon IconReport">
										<span class="SROnly">‚ö†Ô∏è</span>
										<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
											<path stroke-linecap="round" stroke-linejoin="round" d="M3 3v1.5M3 21v-6m0 0l2.77-.693a9 9 0 016.208.682l.108.054a9 9 0 006.086.71l3.114-.732a48.524 48.524 0 01-.005-10.499l-3.11.732a9 9 0 01-6.085-.711l-.108-.054a9 9 0 00-6.208-.682L3 4.5M3 15V4.5" />
										</svg>
									</icon>
									<span class="ButtonText">RaporteazƒÉ<span class="DesktopOnlyInline"> link</span></span>
								</button>
							</li>
						</ul>
					</aside>
				</li>
			))}
		</ol>
	)}

	{(!resources || resources.length <= 0) && (
		<Message title="Nu s-au gƒÉsit resurse pentru contextul curent" type="error">
			<p>DƒÉ-ne un mesaj √Æn <a href="/contact">pagina de contact</a> dacƒÉ s-a produs o eroare.</p>
		</Message>
	)}

	{page && <Pagination currentPage={page.currentPage} lastPage={page.lastPage} next={page.url.next} prev={page.url.prev} />}
</div>