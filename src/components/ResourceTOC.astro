---
/**
 * Renders a navigation menu based on the provided section and its categories and subcategories.
 * @component
 * @example
 * ```astro
 * <ResourceTOC section={theSection} />
 * ```
 * @property {Object} section - An object representing the current section.
 * @returns {astro.AstroNode} The rendered navigation menu.
 */

import { highlightUrl } from '@utils/urlHelpers';
import type { Database } from '@customtypes/supabase';

export interface Props {
	section: Database['public']['Tables']['taxonomy']['Row'];
	categories?: Database['public']['Tables']['taxonomy']['Row'][];
}

const { section, categories } = Astro.props satisfies Props;
//console.log('SECTION AND CATEGORIES', section);
const activePage = Astro.url.pathname;
---

<nav class="ListNavigation">
	{
		categories ? (
			<>
				<h2 class="ListNavTitle" id="treeTitle">
					Categorii de {section.title}:
				</h2>
				<ol class="ListNav">
					{categories.map((category) => (
						<li class:list={highlightUrl(`/${section.slug}/${category.slug}`, 'ListNavItem', 'ActiveListNav', activePage)}>
							<a class="ListNavLink" href={`/${section.slug}/${category.slug}`} title={`Vezi resursele din categoria ${category.title}`}>
								{category.title}
							</a>
							{category.subcategories && (
								<ol class="ListSubNav">
									{category.subcategories.map((subcategory) => (
										<li class:list={highlightUrl(`/${section.slug}/${category.slug}/${subcategory.slug}`, 'ListSubNavItem', 'ActiveListNav', activePage)}>
											<a
												class="ListSubNavLink"
												href={`/${section.slug}/${category.slug}/${subcategory.slug}`}
												title={`Vezi resursele din subcategoria ${subcategory.title}`}
											>
												{subcategory.title}
											</a>
										</li>
									))}
								</ol>
							)}
						</li>
					))}
					<li class="ListNavItem ListNavClose">
						<button class="ListNavCloseButton" id="closeSubnav" title="Închide meniul de categorii">
							<span class="Icon IconClose">
								<span class="SROnly">❌</span>
								<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
									<path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
								</svg>
							</span>
							<span class="ButtonText">Închide</span>
						</button>
					</li>
				</ol>
			</>
		) : (
			<h2 class="ListNavTitle">Această secțiune nu are categorii.</h2>
		)
	}
</nav>
