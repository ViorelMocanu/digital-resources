---
/**
 * Astro component for including analytics tracking.
 *
 * @component
 * @example
 * ```astro
 * <Analytics />
 * ```
 * @returns {astro.AstroNode} The Astro component for analytics tracking.
 */

import { CLARITY_ID, ENV, PIWIK_ID } from '../config';

// @TODO: analyze whether we need light or latest SA script: https://docs.simpleanalytics.com/light

---

{(ENV !== 'local' && ENV !== 'development') && (
	<div class="Information">
		{/*
		<script is:inline async defer src="https://scripts.simpleanalyticscdn.com/latest.js"></script>
		<noscript>
			<img src="https://queue.simpleanalyticscdn.com/noscript.gif" alt="" referrerpolicy="no-referrer-when-downgrade" />
		</noscript>
		*/}

		<script is:inline define:vars={{ CLARITY_ID }} async defer type="text/partytown">
			(function (c, l, a, r, i, t, y) {
				c[a] = c[a] || function () { (c[a].q = c[a].q || []).push(arguments) };
				t = l.createElement(r);
				t.async = 1;
				t.src = "https://www.clarity.ms/tag/" + i;
				y = l.getElementsByTagName(r)[0];
				y.parentNode.insertBefore(t, y);
			})(window, document, "clarity", "script", CLARITY_ID);
		</script>

		<script is:inline define:vars={{ PIWIK_ID }} async defer type="text/partytown">
			(function (window, document, dataLayerName, id) {
				window[dataLayerName] = window[dataLayerName] || [], window[dataLayerName].push({ start: (new Date).getTime(), event: "stg.start" });
				var scripts = document.getElementsByTagName('script')[0], tags = document.createElement('script');
				function stgCreateCookie(a, b, c) {
					var d = "";
					if (c) {
						var e = new Date;
						e.setTime(e.getTime() + 24 * c * 60 * 60 * 1e3), d = "; expires=" + e.toUTCString();
						f = "; SameSite=Strict";
					}
					document.cookie = a + "=" + b + d + f + "; path=/";
				}
				var isStgDebug = (window.location.href.match("stg_debug") || document.cookie.match("stg_debug")) && !window.location.href.match("stg_disable_debug");
				stgCreateCookie("stg_debug", isStgDebug ? 1 : "", isStgDebug ? 14 : -1);
				var qP = [];
				dataLayerName !== "dataLayer" && qP.push("data_layer_name=" + dataLayerName), isStgDebug && qP.push("stg_debug");
				var qPString = qP.length > 0 ? ("?" + qP.join("&")) : "";
				tags.async = !0, tags.src = "https://viorelmocanu.containers.piwik.pro/" + id + ".js" + qPString, scripts.parentNode.insertBefore(tags, scripts);
				!function (a, n, i) {
					a[n] = a[n] || {};
					for (var c = 0; c < i.length; c++)!function (i) {
						a[n][i] = a[n][i] || {}, a[n][i].api = a[n][i].api || function () {
							var a = [].slice.call(arguments, 0);
							"string" == typeof a[0] && window[dataLayerName].push({ event: n + "." + i + ":" + a[0], parameters: [].slice.call(arguments, 1) });
						}
					}(i[c])
				}(window, "ppms", ["tm", "cm"]);
			})(window, document, 'dataLayer', PIWIK_ID);
		</script>

	</div>
)}
