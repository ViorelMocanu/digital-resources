---
/**
 * Renders a pagination navigation bar based on the provided props.
 * @component
 * @example
 * ```astro
 * <Pagination currentPage={2} lastPage={5} next="/page/3" prev="/page/1" boxHeader={true} pageTitle="Blog" />
 * ```
 * @property {number} currentPage - The current page number.
 * @property {number} lastPage - The last page number.
 * @property {string} [next] - The URL for the next page.
 * @property {string} [prev] - The URL for the previous page.
 * @property {boolean} [boxHeader] - Flag for displaying a box header. Default is true.
 * @property {string} [pageTitle] - The page title.
 * @returns {astro.AstroNode} The rendered pagination navigation bar component.
 */

export interface Props {
	currentPage: number;
	lastPage: number;
	next?: string | undefined;
	prev?: string | undefined;
	boxHeader?: boolean;
	pageTitle?: string | undefined;
}

const { currentPage, lastPage, next, prev, boxHeader = true, pageTitle } = Astro.props satisfies Props;
const paginationList = Array.from({ length: Number(lastPage) }, (_, i) => i + 1);
const pagePrototype = next ? next.replace(`/${currentPage + 1}`, '') : prev ? prev.replace(`/${currentPage - 1}`, '') : Astro.url;
---

<nav class="Pagination">
	{
		boxHeader && (
			<h3 class="PaginationTitle">
				Ești pe pagina <strong>{currentPage}</strong> din <strong>{lastPage}</strong>&#32;
				{pageTitle && <span>în zona de {pageTitle}</span>}.&#32;
				{lastPage > 1 && <span>Navighează către altă pagină:</span>}
			</h3>
		)
	}
	{
		lastPage > 1 && (
			<ol class="PaginationList">
				<li class="PaginationItem PaginationPrevious">
					{currentPage > 1 ? (
						<a class="PaginationLink" href={prev} title="Mergi la pagina precedentă">
							&laquo; Precedenta<span class="HideLowRes"> Pagină</span>
						</a>
					) : (
						<span class="PaginationUnavailable">Ești pe prima pagină</span>
					)}
				</li>
				{lastPage > 15 && (currentPage < 4 || currentPage > lastPage - 3) && (
					<>
						{paginationList.slice(0, 4).map((num) => (
							<li class:list={num == currentPage ? ['PaginationItem', 'PaginationCurrent'] : ['PaginationItem']}>
								<a class="PaginationLink" href={`${pagePrototype}/${num == 1 ? '' : num}`} title={`Mergi la pagina ${num} din ${lastPage}`}>
									{num}
								</a>
							</li>
						))}
						<li class="PaginationItem PaginationEllipsis">
							<span class="SpacerSymbol">...</span>
						</li>
						{paginationList.slice(-4).map((num) => (
							<li class:list={num == currentPage ? ['PaginationItem', 'PaginationCurrent'] : ['PaginationItem']}>
								<a class="PaginationLink" href={`${pagePrototype}/${num}`} title={`Mergi la pagina ${num} din ${lastPage}`}>
									{num}
								</a>
							</li>
						))}
					</>
				)}
				{lastPage > 15 && currentPage >= 4 && currentPage <= lastPage - 3 && (
					<>
						{paginationList.slice(0, 2).map((num) => (
							<li class:list={['PaginationItem']}>
								<a class="PaginationLink" href={`${pagePrototype}/${num == 1 ? '' : num}`} title={`Mergi la pagina ${num} din ${lastPage}`}>
									{num}
								</a>
							</li>
						))}
						<li class="PaginationItem PaginationEllipsis">
							<span class="SpacerSymbol">...</span>
						</li>
						{paginationList.slice(currentPage - 2, currentPage + 1).map((num) => (
							<li class:list={num == currentPage ? ['PaginationItem', 'PaginationCurrent'] : ['PaginationItem']}>
								<a class="PaginationLink" href={`${pagePrototype}/${num}`} title={`Mergi la pagina ${num} din ${lastPage}`}>
									{num}
								</a>
							</li>
						))}
						<li class="PaginationItem PaginationEllipsis">
							<span class="SpacerSymbol">...</span>
						</li>
						{paginationList.slice(-2).map((num) => (
							<li class:list={['PaginationItem']}>
								<a class="PaginationLink" href={`${pagePrototype}/${num}`} title={`Mergi la pagina ${num} din ${lastPage}`}>
									{num}
								</a>
							</li>
						))}
					</>
				)}
				<li class="PaginationItem PaginationNext">
					{currentPage < lastPage ? (
						<a class="PaginationLink" href={next} title="Mergi la pagina următoare">
							Următoarea<span class="HideLowRes"> Pagină</span> &raquo;
						</a>
					) : (
						<span class="PaginationUnavailable">Ești pe ultima pagină</span>
					)}
				</li>
			</ol>
		)
	}
</nav>
