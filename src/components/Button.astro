---
export interface Props {
	text?: string;
	handler?: any;
	isLink?: boolean;
	href?: string;
	newTab?: boolean;
	classStr?: string;
	id?: string;
	download?: boolean;
	type?: ButtonType;
}

export enum ButtonType {
	PRIMARY = "primary",
	SECONDARY = "secondary",
}
const {
	text,
	handler,
	isLink = false,
	href = "/",
	newTab = false,
	classStr,
	id,
	download = false,
	type = ButtonType.SECONDARY
} = Astro.props;

const colorClasses = {
	primary: "ButtonPrimary",
	secondary: "ButtonSecondary",
};
const classes = [
	'Button',
	classStr || "",
	colorClasses[type]
];
---
@TODO: use this
{
	!isLink && (
		<button class:list={classes} onclick={handler} id={id || ""}>
			{text && text}
			<slot />
		</button>
	)
}
{
	isLink && download && (
		<a href={href} class:list={classes} download>
			{text && text}
			<slot />
		</a>
	)
}
{
	isLink && newTab && (
		<a href={href} class:list={classes} rel="noopener noreferrer" target="_blank" id={id || ""}>
			{text && text}
			<slot />
		</a>
	)
}

{
	isLink && !newTab && !download && (
		<a href={href} class:list={classes} id={id || ""}>
			{text && text}
			<slot />
		</a>
	)
}