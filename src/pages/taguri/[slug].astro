---
import { type CollectionEntry, getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import ResourceList from '../../components/ResourceList.astro';

export async function getStaticPaths() {
	const tags = (await getCollection('tags')).sort((a, b) => new Date(a.data.title).valueOf() - new Date(b.data.title).valueOf()); // ordering by sortOrder asc
	return tags.map((tag) => ({
		params: { slug: tag.slug },
		props: { tag },
	}));
}

const { slug } = Astro.params;
const { tag } = Astro.props;
const { Content } = await tag.render();

const resources = (
	await getCollection('resources', ({ data }) => {
		return data.tags.find((t) => t.slug == tag.slug);
	})
).sort((a, b) => new Date(a.data.modDate as string).valueOf() - new Date(b.data.modDate as string).valueOf()) satisfies CollectionEntry<'resources'>[];

const pageTitle = `Tag: ${tag.data.title}`;
const pageDescription = tag.data.description;
const breadcrumbArray = [
	{
		href: '/taguri',
		title: 'Toate etichetele de pe Resurse.dev',
		label: 'Tag-uri',
	},
	{
		href: Astro.url,
		title: tag.data.title,
		label: tag.data.title,
	},
];
---

<Layout title={pageTitle} description={pageDescription} template="TagIndex" breadcrumbArray={breadcrumbArray}>
	<div class="Hero" id="hero">
		<div class="HeroText">
			<h1 class="HeroTitle">Tag: {tag.data.title}</h1>
		</div>
	</div>
	<main class="Main">
		@TODO: desenează layout în Figma pentru pagina asta @TODO: Completează conținutul paginii curente
		{slug}
		<Content />
		<ResourceList resources={resources} pageTitle={`Tag: ${tag.data.title}`} />
	</main>
</Layout>
